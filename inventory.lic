custom_require.call(%w[common])

include DRC

@settings = get_settings
sorted_contents = {}
$ORDINALS = %w[first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth fourteenth fifteenth sixteenth seventeenth eighteenth nineteenth twentieth]

action = proc { |s|
  if s =~ /^([IO]n the .*?) (you see .*\.)/
    container = Regexp.last_match(1)
    contents = Regexp.last_match(2)
  elsif s =~ /^(You rummage .*?)( and see .*?\.)/
    container = Regexp.last_match(1)
    contents = Regexp.last_match(2)
  elsif s =~ /You are wearing (.*\.)/
    container = 'Inventory'
    contents = 'and see ' + Regexp.last_match(1)
  end
  
  container = container.sub(/^([IO]n the )|You rummage through (a|an|some) /,'')
  if contents =~ /(?:and|you) see (.*)\./
    if contents = DRC.list_to_array(Regexp.last_match(1))
      contents.each do |item|
        item = item.sub(/^\s*?\b(?:a|an|some|and|the)\b\s/, '')
        sorted_contents[container] ||= {}
        sorted_contents ||= {}
        if sorted_contents[container][item]['count'].nil?
          sorted_contents[container][item] = {}
          sorted_contents[container][item]['count'] = 1
        else
          sorted_contents[container][item]['count'] += 1
        end
      end
    end
    sorted_contents[container] = sorted_contents[container].sort
  end
  
  s
}

before_dying do
  DownstreamHook.remove('inventory')
end

DownstreamHook.add('inventory', action)

fput('inventory container')
waitfor('All of your containers:')
invcontainers = []
while (line = get)
  break if line =~ /Type INVENTORY HELP for more options/
  invcontainers.push(line)
end

invcontainers.each_index {|index|
  invcontainers[index].sub!(/^\s*?\b(?:a|an|some|and|the)\b\s/, '')
  invcontainers[index].sub!(/ \(closed\)/,'')
  invcontainers[index] = get_noun(invcontainers[index])
}
invcontainers = invcontainers.sort!.inject(Hash.new(0)) { |h,e| h[e] += 1; h }

invcontainers.each {|key, value|
  for i in 0..value-1
    fput("rummage in my #{$ORDINALS[i]} #{key}")
    fput("rummage on my #{$ORDINALS[i]} #{key}")
  end
}

sorted_contents.each{|x|
  echo x
} 
